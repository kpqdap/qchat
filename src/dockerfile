FROM node:alpine AS base

RUN apk --no-cache upgrade && \
    apk add --no-cache ca-certificates libc6-compat \
    && mkdir -p /etc/pki/ca-trust/source/anchors \
    && update-ca-certificates

WORKDIR /app

RUN npm install -g npm@latest

FROM base AS deps

COPY package.json yarn.lock* package-lock.json* pnpm-lock.yaml* ./

RUN if [ -f yarn.lock ]; then yarn --frozen-lockfile; \
    elif [ -f package-lock.json ]; then npm ci; \
    elif [ -f pnpm-lock.yaml ]; then yarn global add pnpm && pnpm i --frozen-lockfile; \
    else echo "Lockfile not found." && exit 1; \
    fi

FROM base AS builder
WORKDIR /app

COPY --from=deps /app/node_modules ./node_modules
COPY . .

ARG BUILD_ID
ARG NEXT_PUBLIC_API_URL
ARG NEXT_PUBLIC_APPLICATIONINSIGHTS_CONNECTION_STRING
ARG NEXT_PUBLIC_FEATURE_TRANSLATOR
ENV AZURE_BUILD_ID=$BUILD_ID

RUN npm run build

FROM base AS runner
WORKDIR /app

RUN npm install -g npm@latest

ENV NODE_ENV production
ENV NEXT_TELEMETRY_DISABLED 1

RUN addgroup --system --gid 1001 nodejs && \
    adduser --system --uid 1001 nextjs

COPY --from=builder /app/public ./public
COPY --from=builder --chown=nextjs:nodejs /app/.next/standalone ./
COPY --from=builder --chown=nextjs:nodejs /app/.next/static ./.next/static

COPY package.json package-lock.json* ./
RUN npm install --omit=dev

USER nextjs

ENV PORT 443
ENV HOSTNAME 0.0.0.0

CMD ["node", "server.js"]
